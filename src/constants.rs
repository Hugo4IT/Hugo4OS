////////////////////////////////////////////////////////////////////////////////
// async/await                                                                //
////////////////////////////////////////////////////////////////////////////////

pub const MAXIMUM_CONCURRENT_TASKS: usize = 100;

////////////////////////////////////////////////////////////////////////////////
// Memory                                                                     //
////////////////////////////////////////////////////////////////////////////////

// Data sizes
#[allow(non_upper_case_globals)] pub const KiB: usize = 1024;
#[allow(non_upper_case_globals)] pub const MiB: usize = 1024 * KiB;
#[allow(non_upper_case_globals)] pub const GiB: usize = 1024 * MiB;
#[allow(non_upper_case_globals)] pub const TiB: usize = 1024 * GiB;

/// Block sizes to use for FixedSizeBlockAllocator. These **must** be powers
/// of 2, because of how the allocator works.
pub const BLOCK_SIZES: &[usize] = &[8, 16, 32, 64, 128, 256, 512, 1024, 2048];

/// Start address for Dynamic Memory
pub const HEAP_START: usize = 0x4444_4444_0000;
/// Size of Dynamic Memory
pub const HEAP_SIZE: usize = 10 * MiB;


////////////////////////////////////////////////////////////////////////////////
// Graphics                                                                   //
////////////////////////////////////////////////////////////////////////////////

pub const RED: usize = 0;
pub const BG: usize = 1;
pub const FG: usize = 2;
pub static mut COLORS: &mut [u32] = &mut [
    0xffda0037,
    0xff171717,
    0xffd3d3d3,
];

pub static ALPHA_BLEND_TEST: &[u32] = &[
    0x00FFFFFF, 0x11FFFFFF, 0x22FFFFFF, 0x33FFFFFF, 0x44FFFFFF, 0x55FFFFFF, 0x66FFFFFF, 0x77FFFFFF, 0x88FFFFFF, 0x99FFFFFF, 0xAAFFFFFF, 0xBBFFFFFF, 0xCCFFFFFF, 0xDDFFFFFF, 0xEEFFFFFF, 0xFFFFFFFF,
    0x00FF0000, 0x11FF0000, 0x22FF0000, 0x33FF0000, 0x44FF0000, 0x55FF0000, 0x66FF0000, 0x77FF0000, 0x88FF0000, 0x99FF0000, 0xAAFF0000, 0xBBFF0000, 0xCCFF0000, 0xDDFF0000, 0xEEFF0000, 0xFFFF0000,
];
pub static PIXEL_ART: &[u32] = &[
    0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 
    0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 
    0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 
    0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xff000000, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 
    0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffce791e, 0xffce791e, 
    0xffce791e, 0xffce791e, 0xffce791e, 0xffce791e, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 
    0xffce791e, 0xffce791e, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 
    0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 
    0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xffe59036, 
    0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 
    0xfff49f46, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xff000000, 0xff000000, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 
    0xfff49f46, 0xfff49f46, 0xffe59036, 0xffe59036, 0xffe59036, 0xffe59036, 0xff000000, 0xffe59036, 0xffe59036, 0xfff49f46, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 
    0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 
    0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 
    0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 
    0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xfff49f46, 0xfff49f46, 0xfff49f46, 
    0xffa93b16, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xfff49f46, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xfff49f46, 
    0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xfff49f46, 0xff000000, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xfff49f46, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 
    0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 
    0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 
    0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 
    0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffa93b16, 0xffa93b16, 0xffa93b16, 
    0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffbf4c26, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffa93b16, 
    0xffbf4c26, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xffa93b16, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 
    0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 
    0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 
    0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 
    0xffbf4c26, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 0xffbf4c26, 
    0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffbf4c26, 0xffbf4c26, 
    0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 
    0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 
    0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d, 0xffce562d
];

pub static FONT_REGULAR: &[u8] = include_bytes!("../res/fonts/Roboto/Roboto-Regular.ttf");
// pub static FONT_REGULAR: &[u8] = include_bytes!("../res/fonts/Karla/static/Karla-Regular.ttf");
// pub static FONT_REGULAR: &[u8] = include_bytes!("../res/fonts/OpenDyslexic/OpenDyslexicMono Regular Nerd Font Complete Mono.otf");
// pub static FONT_REGULAR: &[u8] = include_bytes!("../res/fonts/JetBrainsMono/JetBrains Mono Regular Nerd Font Complete Mono.ttf");

pub const COLOR_DIV_LOOKUP_TABLE: &[u8; 65536] = include_bytes!("../res/generated/color-div-lookup-table.bin");
pub const COLOR_MULT_LOOKUP_TABLE: &[u8; 65536] = include_bytes!("../res/generated/color-mult-lookup-table.bin");